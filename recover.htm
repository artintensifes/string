
<!-- index.html recovery -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signup / Login - Stringer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #fafafa;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
        }
        .container {
            background: #fff;
            width: 350px;
            padding: 40px;
            text-align: center;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: relative;
        }
        h2 {
            font-family: 'Billabong', cursive;
            font-size: 2rem;
            margin-bottom: 20px;
            transition: color 0.3s;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 8px 0;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            font-size: 14px;
        }
        button {
            width: 100%;
            padding: 10px;
            background: #0095f6;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            position: relative;
        }
        button:hover {
            background: #0077cc;
        }
        .login-link {
            margin-top: 15px;
            font-size: 14px;
        }
        .login-link a {
            color: #0095f6;
            text-decoration: none;
        }
        .login-link a:hover {
            text-decoration: underline;
        }
        .loader {
            display: none;
            width: 40px;
            height: 40px;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: #0095f6;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }
        .error-message {
            color: red;
            font-size: 14px;
            margin-top: 5px;
            text-align: left;
        }
        .form-container {
            display: block;
        }
        .form-container.hidden {
            display: none;
        }
    </style>
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";
        import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-auth.js";
        import { getFirestore, doc, setDoc, getDoc } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js";

        const firebaseConfig = {
            apiKey: "AIzaSyChVgdEdoH3E5ueWQw3f2tk0JJn_DrfteA",
            authDomain: "stringer-a6866.firebaseapp.com",
            projectId: "stringer-a6866",
            storageBucket: "stringer-a6866.firebasestorage.app",
            messagingSenderId: "893503594092",
            appId: "1:893503594092:web:658cff1d4c453893154249"
        };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);
        const db = getFirestore(app);

        function generateUniqueId() {
            return Math.floor(100000 + Math.random() * 900000);
        }

        async function isUniqueId(id) {
            const userDoc = await getDoc(doc(db, "users", id.toString()));
            return !userDoc.exists();
        }

        document.getElementById('signupForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const name = document.getElementById('name').value;  // Get the name input
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    const button = document.getElementById('signupButton');
    const loader = document.getElementById('loader');
    const errorMessage = document.getElementById('error-message');

    button.disabled = true;
    loader.style.display = 'block';
    errorMessage.textContent = "";

    try {
        const userCredential = await createUserWithEmailAndPassword(auth, email, password);
        const user = userCredential.user;

        let uniqueId, isUnique = false;
        while (!isUnique) {
            uniqueId = generateUniqueId();
            isUnique = await isUniqueId(uniqueId);
        }

        // Save the name, email, and uniqueId to Firestore
        await setDoc(doc(db, "users", uniqueId.toString()), {
            name: name,  // Save the name here
            email: email,
            uid: user.uid,
            uniqueId: uniqueId
        });

        window.location.href = `search.html?email=${encodeURIComponent(email)}&uniqueId=${uniqueId}`;
    } catch (error) {
        if (error.code === 'auth/email-already-in-use') {
            errorMessage.textContent = 'Email is already in use. Please try another one.';
        } else {
            errorMessage.textContent = 'Error: ' + error.message;
        }
        button.disabled = false;
        loader.style.display = 'none';
    }
});

        document.getElementById('loginLink').addEventListener('click', () => {
            document.getElementById('signupFormContainer').classList.add('hidden');
            document.getElementById('loginFormContainer').classList.remove('hidden');
            document.querySelector('h2').style.color = 'black'; // Change header color to black
            document.querySelector('h2').textContent = 'Stringer Login'; // Change header text
        });

        document.getElementById('signupLink').addEventListener('click', () => {
            document.getElementById('loginFormContainer').classList.add('hidden');
            document.getElementById('signupFormContainer').classList.remove('hidden');
            document.querySelector('h2').style.color = 'blue'; // Change header color to blue
            document.querySelector('h2').textContent = 'Stringer Sign Up'; // Change header text
        });

        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            const button = document.getElementById('loginButton');
            const loader = document.getElementById('loginLoader');
            const errorMessage = document.getElementById('loginErrorMessage');

            button.disabled = true;
            loader.style.display = 'block';
            errorMessage.textContent = "";

            try {
                await signInWithEmailAndPassword(auth, email, password);
                window.location.href = `search.html?email=${encodeURIComponent(email)}`;
            } catch (error) {
                errorMessage.textContent = 'Error: ' + error.message;
                button.disabled = false;
                loader.style.display = 'none';
            }
        });
    </script>
</head>
<body>
    <div class="container">
        <h2>Stringer Sign Up</h2>

        <div id="signupFormContainer" class="form-container">
            <form id="signupForm">
                <input type="text" id="name" placeholder="Full Name" required />
                <input type="email" id="email" placeholder="Email" required />
                <div class="error-message" id="error-message"></div>
                <input type="password" id="password" placeholder="Password" required />
                <button type="submit" id="signupButton">Sign Up</button>
                <div class="loader" id="loader"></div>
            </form>
            <div class="login-link">Already have an account? <a href="#" id="loginLink">Log in</a></div>
        </div>

        <div id="loginFormContainer" class="form-container hidden">
            <form id="loginForm">
                <input type="email" id="loginEmail" placeholder="Email" required />
                <div class="error-message" id="loginErrorMessage"></div>
                <input type="password" id="loginPassword" placeholder="Password" required />
                <button type="submit" id="loginButton">Log In</button>
                <div class="loader" id="loginLoader"></div>
            </form>
            <div class="login-link">Don't have an account? <a href="#" id="signupLink">Sign up</a></div>
        </div>
    </div>
</body>
</html>
